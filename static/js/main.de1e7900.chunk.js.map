{"version":3,"sources":["reducers/blogReducer.js","reducers/nowReducer.js","reducers/projectsReducer.js","reducers/index.js","reducers/store.js","components/TopNav.js","components/About.js","actions/nowActions.js","components/Now.js","actions/blogActions.js","components/Blog.js","components/Post.js","components/Footer.js","actions/projectsActions.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["initialState","posts","currentPost","location","foci","updated","Date","now","combineReducers","blog","state","action","type","payload","projects","middleware","thunk","store","createStore","rootReducer","applyMiddleware","TopNav","useLocation","useState","startNavItem","pathname","slice","indexOfSlash","indexOf","substring","getStartingNavItem","activeNav","setActiveNav","selectNav","item","Navbar","bg","expand","variant","collapseOnSelect","Brand","as","Link","to","href","onClick","Toggle","aria-controls","Collapse","id","Nav","activeKey","map","eventKey","className","onSelect","charAt","toUpperCase","navLink","Home","expertiseHtml","key","value","expertise","Row","Col","xs","Container","lg","md","target","rel","src","alt","getNowData","dispatch","a","axios","get","res","data","Now","nowData","useSelector","lastUpdated","Intl","DateTimeFormat","format","JSON","parse","useDispatch","useEffect","fociHtml","focus","render","link","text","getBlogPosts","getBlogPost","calculateReadingTime","content","minutes","split","length","Math","ceil","Blog","getPostLink","post","is_external","title","getMetadata","sm","excerpt_image","image_alt","date","toLocaleDateString","excerpt","require","Post","useParams","dangerouslySetInnerHTML","__html","convertToMarkdown","Footer","iconHtml","icon","faEnvelopeSquare","class","faTwitterSquare","faLinkedin","faGithubSquare","size","getProjects","project","description","Projects","tab","tabKey","setTabKey","currentUrl","window","endsWith","history","replaceState","getProjectsRender","image","paragraph","index","stack","Tabs","pushState","replace","selectTab","Tab","defaults","baseURL","App","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de1e7900.chunk.js","sourcesContent":["const initialState = {\r\n    posts: [],\r\n    currentPost: {}\r\n}\r\n\r\nexport default function blogReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'GET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case 'GET_POST':\r\n            return {\r\n                ...state,\r\n                currentPost: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    location: '',\r\n    foci: '[]',\r\n    updated: Date.now()\r\n}\r\n\r\nexport default function nowReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'GET_NOW':\r\n            return {\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = [ { } ];\r\n\r\nexport default function projectsReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'GET_PROJECTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport blogReducer from './blogReducer';\r\nimport nowReducer from './nowReducer';\r\nimport projectsReducer from './projectsReducer';\r\n\r\nexport default combineReducers({\r\n    blog: blogReducer,\r\n    now: nowReducer,\r\n    projects: projectsReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '.';\r\n// import { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n    // composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport default function TopNav() {\r\n    const location = useLocation();\r\n\r\n    // Get the nav item that we should start with, on first page load.\r\n    // This is necessary because some pages, like the projects page, have additional data passed in\r\n    // that doesn't match up with the navItems list below.\r\n    const getStartingNavItem = () => {\r\n        // get rid of the starter /\r\n        let startNavItem = location.pathname.slice(1);\r\n\r\n        // If there's a second /, remove it and everything after it\r\n        let indexOfSlash = startNavItem.indexOf('/');\r\n        if(indexOfSlash > 0) {\r\n            startNavItem = startNavItem.substring(0, indexOfSlash);\r\n        }\r\n        return startNavItem;\r\n    }\r\n\r\n    const [activeNav, setActiveNav] = useState(getStartingNavItem());\r\n\r\n    const navItems = ['about', 'blog', 'projects', 'now'];\r\n    const navLink = (item) => {\r\n        return (\r\n            <Nav.Link \r\n                as={Link} \r\n                key={item}\r\n                eventKey={item}\r\n                to={`/${item}`} \r\n                href={`/${item}`} \r\n                className=\"nav-link\"\r\n                onSelect={() => selectNav(item)}>\r\n                    {item.charAt(0).toUpperCase() + item.slice(1)}\r\n            </Nav.Link>\r\n        )\r\n    }\r\n\r\n    const selectNav = (item) => {\r\n        setActiveNav(item);\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" collapseOnSelect>\r\n            <Navbar.Brand as={Link} to=\"/about\" href=\"/about\" onClick={() => selectNav('about')}>Nick Vaccaro</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav activeKey={activeNav}>\r\n                    {navItems.map(item => navLink(item))}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './About.css';\r\n\r\nexport default function Home() {\r\n    let expertises = [\r\n        { key: 'Languages', value: 'JavaScript, C#, SQL, Java, CSS' },\r\n        { key: 'Frameworks', value: 'ReactJS, React Native, NodeJS, .NET/Core, Angular' },\r\n        { key: 'Code Tools', value: 'Unity3D, AWS, IBM Cloud, Git, Docker' },\r\n        { key: 'Databases', value: 'MySQL, MariaDB, Postgres' },\r\n        { key: 'Project Tools', value: 'Asana, Slack, Miro, Figma' }\r\n    ];\r\n\r\n    const expertiseHtml = expertises.map((expertise) => \r\n        <Row className=\"expertise-row\" key={expertise.key}>\r\n            <Col xs={4} className=\"expertise-key\">\r\n                <p>{ expertise.key }</p>\r\n            </Col>\r\n            <Col className=\"expertise-value\">\r\n                <p>{ expertise.value }</p>\r\n            </Col>\r\n        </Row>\r\n    )\r\n    return (\r\n        <Container className=\"about-container\">\r\n            <Row className=\"about-row\">\r\n                <Col>\r\n                    <h1>About</h1>\r\n                    <hr/>\r\n                    <h2>Full Stack Developer</h2>\r\n                    <br/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={8} md={12} className=\"about-content\">\r\n                    <p>I have 8+ years of experience doing front-end, back-end, gamedev, tutorials, code reviews, bug reports, and production deployments. I'm focused on results, and do whatever I can to help the entire team succeed.</p>\r\n                    <p>I co-founded an indie video game company called <a href=\"http://synersteel.com\" target=\"_blank\" rel=\"noopener noreferrer\">Synersteel Studio</a>, and have commercially released 4 games across 3 platforms.</p>\r\n                    <p>You can see some of my projects <Link to=\"/projects\">here</Link>.</p>\r\n                    <p>My expertise lies in:</p>\r\n                    { expertiseHtml }\r\n                </Col>\r\n                <Col lg={4} md={12} className=\"text-center\">\r\n                    <img src=\"/img/me512.jpg\" className=\"figure-img img-fluid rounded border img-me\" alt=\"Nick looking super serious\"/>\r\n                    <div className=\"about-info\">\r\n                        <a href=\"mailto:njvaccaro0@gmail.com\">njvaccaro0@gmail.com</a>\r\n                        <br/>\r\n                        <a href=\"assets/NickVaccaroResume.pdf\" target=\"_blank\">View Resume</a>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const getNowData = async (dispatch) => {\r\n    const res = await axios.get('now');\r\n    dispatch({\r\n        type: 'GET_NOW',\r\n        payload: res.data\r\n    });\r\n}","import React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getNowData } from '../actions/nowActions';\r\n\r\nimport './Now.css';\r\n\r\nexport default function Now() {\r\n    const nowData = useSelector(state => state.now);\r\n    const lastUpdated = nowData.updated ? new Intl.DateTimeFormat('en-US').format(new Date(nowData.updated)) : '';\r\n    const foci = JSON.parse(nowData.foci);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getNowData(dispatch);\r\n    }, [dispatch]);\r\n\r\n    let fociHtml = foci ? (<ul>\r\n        {foci.map(focus => {\r\n            let render;\r\n            if(focus.link) {\r\n                render = <a href={focus.link} target=\"_blank\" rel=\"noopener noreferrer\">{focus.text}</a>;\r\n            } else {\r\n                render = focus.text;\r\n            }\r\n\r\n            return (\r\n                <li key={focus.text}>\r\n                    {render}\r\n                </li>\r\n            )\r\n        })}\r\n    </ul>) : <div></div>;\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Now</h1>\r\n                    <p className=\"subheader\">\r\n                        This is my <a href=\"https://nownownow.com/about\" target=\"_blank\" rel=\"noopener noreferrer\">now page</a>\r\n                    </p>\r\n                    <hr/>\r\n                </Col>\r\n            </Row>\r\n            <p>I'm currently living in {nowData.location}.</p>\r\n            <p>Here's what I'm focused on these days:</p>\r\n            {fociHtml}\r\n            <p className=\"last-updated\">Last Updated {lastUpdated}</p>\r\n        </Container>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const getBlogPosts = async (dispatch) => {\r\n    const res = await axios.get('blog');\r\n    dispatch({\r\n        type: 'GET_POSTS',\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const getBlogPost = async (id, dispatch) => {\r\n    const res = await axios.get('blog/' + id);\r\n    dispatch({\r\n        type: 'GET_POST',\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const calculateReadingTime = (content) => {\r\n    if(!content) return '? minutes';\r\n    let minutes = content.split(' ').length / 130;\r\n    if (minutes < 1) minutes = 1;\r\n    else minutes = Math.ceil(minutes);\r\n    return minutes + ' minute' + (minutes > 1 ? 's' : '');\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBlogPosts, calculateReadingTime } from '../actions/blogActions';\r\n\r\nimport './Blog.css';\r\n\r\nexport default function Blog () {\r\n    const posts = useSelector(state => state.blog.posts);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getBlogPosts(dispatch);\r\n    }, [dispatch]);\r\n\r\n    const getPostLink = (post) => {\r\n        let link;\r\n        if(post.is_external) {\r\n            link = <a href={post.content} target=\"_blank\" rel=\"noreferrer noopener\" className=\"post-title\">{post.title}</a>\r\n        } else {\r\n            link = <Link to={`post/${post.id}`} className=\"post-title\">{post.title}</Link>\r\n        }\r\n        return link;\r\n    }\r\n\r\n    const getMetadata = (post) => {\r\n        let metaData;\r\n        if(post.is_external) {\r\n            metaData = <>External Post</>\r\n        } else {\r\n            metaData = <>Reading Time: {calculateReadingTime(post.content)}</>\r\n        }\r\n        return metaData;\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Blog</h1>\r\n                    <p className=\"subheader\">Where I write about tech & games</p>\r\n                    <hr/>\r\n                </Col>\r\n            </Row>\r\n            {posts.map(post => \r\n                <Row key={post.title} className=\"post-row\">\r\n                    <Col md={3} sm={12}>\r\n                        <img className=\"post-image\" src={post.excerpt_image} alt={post.image_alt} />\r\n                    </Col>\r\n                    <Col>\r\n                        {getPostLink(post)}\r\n                        <p className=\"post-date\">\r\n                            Published: {new Date(post.date).toLocaleDateString()} · {getMetadata(post)}\r\n                        </p>\r\n                        <p className=\"post-excerpt\">{post.excerpt}</p>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBlogPost, calculateReadingTime } from '../actions/blogActions';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport './Blog.css';\r\nimport './Post.css';\r\n\r\nlet md = require('markdown-it')();\r\n\r\nexport default function Post () {\r\n    const post = useSelector(state => state.blog.currentPost);\r\n    const dispatch = useDispatch();\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getBlogPost(id, dispatch);\r\n    }, [id, dispatch]);\r\n\r\n    const convertToMarkdown = content => {\r\n        if(!content) return;\r\n        let result = md.render(content);\r\n        return {__html: result};\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>{post.title}</h1>\r\n                    <p className=\"text-center post-date\">\r\n                        Reading Time: {calculateReadingTime(post.content)} · \r\n                        Published: {new Date(post.date).toLocaleDateString()}\r\n                    </p>\r\n                    <hr/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col dangerouslySetInnerHTML={convertToMarkdown(post.content)} className=\"post-content\">\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTwitterSquare, faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default function Footer() {\r\n    let contactData = [\r\n        { href: 'mailto:njvaccaro0@gmail.com', icon: faEnvelopeSquare, class: 'email' },\r\n        { href: 'https://twitter.com/NickJVaccaro', icon: faTwitterSquare, class: 'twitter' },\r\n        { href: 'https://www.linkedin.com/in/nickjvaccaro', icon: faLinkedin, class: 'linkedin' },\r\n        { href: 'https://github.com/NickJVaccaro', icon: faGithubSquare, class: 'github' }\r\n    ];\r\n\r\n    const iconHtml = contactData.map((data) => \r\n        <Col key={data.href}>\r\n            <a href={data.href} className={'fa-' + data.class + ' fa-clickable'}>\r\n                <FontAwesomeIcon icon={data.icon} size=\"3x\" />\r\n            </a>\r\n        </Col>\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n                <Row>\r\n                    { iconHtml }\r\n                </Row>\r\n            </Row>\r\n            <br/>\r\n        </Container>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const getProjects = async (dispatch) => {\r\n    const res = await axios.get('projects');\r\n\r\n    let projects = res.data;\r\n    projects = projects.map(project => {\r\n        project.description = JSON.parse(project.description);\r\n        return project;\r\n    });\r\n\r\n    dispatch({\r\n        type: 'GET_PROJECTS',\r\n        payload: projects\r\n    });\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Container, Row, Col, Tabs, Tab } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getProjects } from '../actions/projectsActions';\r\n\r\nimport './Projects.css';\r\n\r\nexport default function Projects() {\r\n    const projects = useSelector(state => state.projects);\r\n    const dispatch = useDispatch();\r\n    const { tab } = useParams();\r\n    const [tabKey, setTabKey] = useState('software');\r\n\r\n    useEffect(() => {\r\n        getProjects(dispatch);\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if(tab) {\r\n            setTabKey(tab);\r\n        } else {\r\n            // If there's no tab param, that means they navigated directly to /projects, so\r\n            // put them on /projects/software. Make sure to account for a trailing / though.\r\n            let currentUrl = window.location.href;\r\n            if(currentUrl.endsWith('/')) {\r\n                currentUrl = currentUrl.substring(0, currentUrl.length - 1);\r\n            }\r\n            window.history.replaceState({}, '', currentUrl + '/software');\r\n            setTabKey('software');\r\n        }\r\n    }, [tab]);\r\n\r\n    const getProjectsRender = (type) => {\r\n        return (\r\n            <>\r\n            {projects.map(project =>\r\n                project.type === type &&\r\n                <div key={project.id}>\r\n                    <hr/>\r\n                    <Row className=\"project-row\">\r\n                        <Col md={3} sm={12}>\r\n                            <img className=\"post-image\" src={project.image} alt=\"\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-title\">{project.title}</a>\r\n                            {project.description.map((paragraph, index) =>\r\n                                <p key={index}>{paragraph}</p>\r\n                            )}\r\n                            <p><strong>Tech/Tools:</strong> {project.stack}</p>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    const selectTab = (key) => {\r\n        window.history.pushState({}, '', window.location.href.replace(tabKey, key));\r\n        setTabKey(key);\r\n    }\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Projects</h1>\r\n                    <p className=\"subheader\">List of projects I've worked on.</p>\r\n                </Col>\r\n            </Row>\r\n            <Tabs activeKey={tabKey} id=\"projects-tabs\" className=\"tabs\" onSelect={(key) => selectTab(key)}>\r\n                <Tab eventKey=\"software\" title=\"Software\" className=\"tab-container\">\r\n                    <p>General software projects I've worked on.</p>\r\n                    {getProjectsRender('software')}\r\n                </Tab>\r\n                <Tab eventKey=\"gamedev\" title=\"Gamedev\" className=\"tab-container\">\r\n                    <p>List of games I've developed. For the full list, check out <a href=\"https://synersteel.com\" target=\"_blank\" rel=\"noopener noreferrer\">synersteel.com</a>.</p>\r\n                    {getProjectsRender('gamedev')}\r\n                </Tab>\r\n                <Tab eventKey=\"hobbies\" title=\"Hobbies\" className=\"tab-container\">\r\n                    <p>List of my more significant hobby projects, many of which do not involve any coding at all.</p>\r\n                    {getProjectsRender('hobby')}\r\n                </Tab>\r\n            </Tabs>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n// Routing\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './reducers/store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport TopNav from './components/TopNav';\r\nimport About from './components/About';\r\nimport Now from './components/Now';\r\nimport Blog from './components/Blog';\r\nimport Post from './components/Post';\r\nimport Footer from './components/Footer';\r\nimport Projects from './components/Projects';\r\n\r\nconst setAxios = () => {\r\n  axios.defaults.baseURL = 'https://server.nickvaccaro.com';\r\n  // axios.defaults.baseURL = 'http://localhost:3000';\r\n}\r\nsetAxios();\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <TopNav/>\r\n          <Switch>\r\n            <Route path=\"/about\"><About /></Route>\r\n            <Route path=\"/projects/:tab?\"><Projects /></Route>\r\n            <Route path=\"/blog\"><Blog /></Route>\r\n            <Route path=\"/now\"><Now /></Route>\r\n            <Route path=\"/post/:id\"><Post /></Route>\r\n            <Route path=\"/\"><Redirect to=\"/about\" /></Route>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}