{"version":3,"sources":["reducers/blogReducer.js","reducers/nowReducer.js","reducers/index.js","reducers/store.js","components/TopNav.js","components/About.js","actions/nowActions.js","components/Now.js","actions/blogActions.js","components/Blog.js","components/Post.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","posts","currentPost","location","foci","updated","Date","now","combineReducers","blog","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","applyMiddleware","TopNav","Navbar","bg","expand","variant","to","Brand","Nav","className","Home","expertiseHtml","key","value","map","expertise","Row","Col","md","Container","lg","href","target","rel","src","alt","getNowData","dispatch","a","axios","get","res","data","console","log","Now","nowData","useSelector","lastUpdated","Intl","DateTimeFormat","format","JSON","parse","useDispatch","useEffect","fociHtml","focus","text","link","getBlogPosts","getBlogPost","id","calculateReadingTime","content","minutes","split","length","Math","ceil","Blog","post","title","excerpt_image","image_alt","date","toLocaleDateString","excerpt","require","Post","useParams","dangerouslySetInnerHTML","__html","render","convertToMarkdown","Footer","iconHtml","icon","faEnvelopeSquare","class","faTwitterSquare","faLinkedin","faGithubSquare","size","defaults","baseURL","App","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c4d6beb.chunk.js","sourcesContent":["const initialState = {\r\n    posts: [],\r\n    currentPost: {}\r\n}\r\n\r\nexport default function blogReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'GET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: action.payload\r\n            }\r\n        case 'GET_POST':\r\n            return {\r\n                ...state,\r\n                currentPost: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState = {\r\n    location: '',\r\n    foci: '[]',\r\n    updated: Date.now()\r\n}\r\n\r\nexport default function nowReducer (state = initialState, action) {\r\n    switch(action.type) {\r\n        case 'GET_NOW':\r\n            return {\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport blogReducer from './blogReducer';\r\nimport nowReducer from './nowReducer';\r\n\r\nexport default combineReducers({\r\n    blog: blogReducer,\r\n    now: nowReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '.';\r\n// import { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n    // composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function TopNav() {\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\" variant=\"light\">\r\n            <Link to=\"/about\"><Navbar.Brand>Nick Vaccaro</Navbar.Brand></Link>\r\n            <Nav>\r\n                <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                {/* <Link to=\"/projects\" className=\"nav-link\">Projects</Link> */}\r\n                <Link to=\"/blog\" className=\"nav-link\">Blog</Link>\r\n                <Link to=\"/now\" className=\"nav-link\">Now</Link>\r\n            </Nav>\r\n        </Navbar>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n// import { Link } from 'react-router-dom';\r\n\r\nimport './About.css';\r\n\r\nexport default function Home() {\r\n    let expertises = [\r\n        { key: 'Languages', value: 'JavaScript, C#, SQL, Java, CSS' },\r\n        { key: 'Frameworks', value: 'React, Node, React Native, .NET/Core, Angular' },\r\n        { key: 'Code Tools', value: 'Unity3D, AWS, Git, IIS, Docker' },\r\n        { key: 'Databases', value: 'MySQL, MariaDB, Postgres' },\r\n        { key: 'Project Tools', value: 'Asana, Slack, Trello, MediaWiki' }\r\n    ];\r\n\r\n    const expertiseHtml = expertises.map((expertise) => \r\n        <Row className=\"expertise-row\" key={expertise.key}>\r\n            <Col md={4} className=\"expertise-key\">\r\n                <p>{ expertise.key }</p>\r\n            </Col>\r\n            <Col className=\"expertise-value\">\r\n                <p>{ expertise.value }</p>\r\n            </Col>\r\n        </Row>\r\n    )\r\n    return (\r\n        <Container className=\"about-container\">\r\n            <Row className=\"about-row\">\r\n                <Col>\r\n                    <h1>About</h1>\r\n                    <hr/>\r\n                    <h2>Full Stack Developer</h2>\r\n                    <br/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={8} md={12} className=\"about-content\">\r\n                    <p>I have 8+ years of experience doing back-end, front-end, gamedev, tutorials, code reviews, bug reports, and production deployments. I'm focused on results, and do whatever I can to help the entire team succeed.</p>\r\n                    <p>I am co-founder of an indie video game company called <a href=\"http://synersteel.com\" target=\"_blank\" rel=\"noopener noreferrer\">Synersteel Studio</a>, and have commercially released 4 games across 3 platforms.</p>\r\n                    {/* <p>You can see some of my projects <Link to=\"/projects\">here</Link>.</p> */}\r\n                    <p>My expertise lies in:</p>\r\n                    { expertiseHtml }\r\n                </Col>\r\n                <Col lg={4} md={12} className=\"text-center\">\r\n                    <img src=\"/img/me512.jpg\" className=\"figure-img img-fluid rounded border img-me\" alt=\"Nick looking super serious\"/>\r\n                    <div className=\"about-info\">\r\n                        <a href=\"mailto:njvaccaro0@gmail.com\">njvaccaro0@gmail.com</a>\r\n                        <br/>\r\n                        {/* <a href=\"assets/NickVaccaroResume.pdf\" target=\"_blank\">View Resume</a> */}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const getNowData = async (dispatch) => {\r\n    const res = await axios.get('now');\r\n    dispatch({\r\n        type: 'GET_NOW',\r\n        payload: res.data\r\n    });\r\n    console.log(res.data);\r\n}","import React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getNowData } from '../actions/nowActions';\r\n\r\nimport './Now.css';\r\n\r\nexport default function Now() {\r\n    const nowData = useSelector(state => state.now);\r\n    const lastUpdated = nowData.updated ? new Intl.DateTimeFormat('en-US').format(new Date(nowData.updated)) : '';\r\n    const foci = JSON.parse(nowData.foci);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getNowData(dispatch);\r\n    }, [dispatch]);\r\n\r\n    let fociHtml = foci ? (<ul>\r\n        {foci.map(focus => \r\n            <li key={focus.text}>{focus.text} {focus.link ? (<a href={focus.link} target='_blank' rel=\"noopener noreferrer\">(Link)</a>) : ''}</li>\r\n        )}\r\n    </ul>) : <div></div>;\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Now</h1>\r\n                    <hr/>\r\n                </Col>\r\n            </Row>\r\n            <p>This is my <a href=\"https://nownownow.com/about\" target=\"_blank\" rel=\"noopener noreferrer\">now page</a>.</p>\r\n            <p>I'm current living in {nowData.location}.</p>\r\n            <p>Here's what I'm focused on these days:</p>\r\n            {fociHtml}\r\n            <p className=\"last-updated\">Last Updated {lastUpdated}</p>\r\n        </Container>\r\n    )\r\n}","import axios from 'axios';\r\n\r\nexport const getBlogPosts = async (dispatch) => {\r\n    const res = await axios.get('blog');\r\n    dispatch({\r\n        type: 'GET_POSTS',\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const getBlogPost = async (id, dispatch) => {\r\n    const res = await axios.get('blog/' + id);\r\n    dispatch({\r\n        type: 'GET_POST',\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const calculateReadingTime = (content) => {\r\n    if(!content) return '? minutes';\r\n    let minutes = content.split(' ').length / 130;\r\n    if (minutes < 1) minutes = 1;\r\n    else minutes = Math.ceil(minutes);\r\n    return minutes + ' minute' + (minutes > 1 ? 's' : '');\r\n}","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBlogPosts, calculateReadingTime } from '../actions/blogActions';\r\n\r\nimport './Blog.css';\r\n\r\nexport default function Blog () {\r\n    const posts = useSelector(state => state.blog.posts);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getBlogPosts(dispatch);\r\n    }, [dispatch]);\r\n\r\n    return(\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>Blog</h1>\r\n                    <hr/>\r\n                </Col>\r\n            </Row>\r\n            {posts.map(post => \r\n                <Row key={post.title} className=\"post-row\">\r\n                    <Col lg={3}>\r\n                        <img className=\"post-image\" src={post.excerpt_image} alt={post.image_alt} />\r\n                    </Col>\r\n                    <Col>\r\n                        <Link to={'post/' + post.id} className=\"post-title\">{post.title}</Link>\r\n                        <p className=\"post-date\">\r\n                            Reading Time: {calculateReadingTime(post.content)} ·\r\n                            Published: {new Date(post.date).toLocaleDateString()}\r\n                        </p>\r\n                        <p className=\"post-excerpt\">{post.excerpt}</p>\r\n                    </Col>\r\n                </Row>\r\n            )}\r\n        </Container>\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBlogPost, calculateReadingTime } from '../actions/blogActions';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport './Blog.css';\r\n\r\nlet md = require('markdown-it')();\r\n\r\nexport default function Post () {\r\n    const post = useSelector(state => state.blog.currentPost);\r\n    const dispatch = useDispatch();\r\n    let { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        getBlogPost(id, dispatch);\r\n    }, [id, dispatch]);\r\n\r\n    const convertToMarkdown = content => {\r\n        if(!content) return;\r\n        let result = md.render(content);\r\n        return {__html: result};\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <h1>{post.title}</h1>\r\n                    <p className=\"text-center post-date\">\r\n                        Reading Time: {calculateReadingTime(post.content)} · \r\n                        Published: {new Date(post.date).toLocaleDateString()}\r\n                    </p>\r\n                    <hr/>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col dangerouslySetInnerHTML={convertToMarkdown(post.content)} className=\"post-content\">\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './Footer.css';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTwitterSquare, faLinkedin, faGithubSquare } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default function Footer() {\r\n    let contactData = [\r\n        { href: 'mailto:njvaccaro0@gmail.com', icon: faEnvelopeSquare, class: 'email' },\r\n        { href: 'https://twitter.com/NickJVaccaro', icon: faTwitterSquare, class: 'twitter' },\r\n        { href: 'https://www.linkedin.com/in/nickjvaccaro', icon: faLinkedin, class: 'linkedin' },\r\n        { href: 'https://github.com/NickJVaccaro', icon: faGithubSquare, class: 'github' }\r\n    ];\r\n\r\n    const iconHtml = contactData.map((data) => \r\n        <Col key={data.href}>\r\n            <a href={data.href} className={'fa-' + data.class + ' fa-clickable'}>\r\n                <FontAwesomeIcon icon={data.icon} size=\"3x\" />\r\n            </a>\r\n        </Col>\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <hr/>\r\n            <Row className=\"justify-content-center\">\r\n                <Row>\r\n                    { iconHtml }\r\n                </Row>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\n// Routing\r\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './reducers/store';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport TopNav from './components/TopNav';\r\nimport About from './components/About';\r\nimport Now from './components/Now';\r\nimport Blog from './components/Blog';\r\nimport Post from './components/Post';\r\nimport Footer from './components/Footer';\r\n\r\nconst setAxios = () => {\r\n  axios.defaults.baseURL = 'https://server.nickvaccaro.com';\r\n}\r\nsetAxios();\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n        <Router>\r\n          <TopNav/>\r\n          <Switch>\r\n            <Route path=\"/about\"><About /></Route>\r\n            {/* <Route path=\"/projects\"></Route> */}\r\n            <Route path=\"/blog\"><Blog /></Route>\r\n            <Route path=\"/now\"><Now /></Route>\r\n            <Route path=\"/post/:id\"><Post /></Route>\r\n            <Route path=\"/\"><Redirect to=\"/about\" /></Route>\r\n          </Switch>\r\n        </Router>\r\n      </Provider>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}